{"name":"Quickledger","tagline":"Quick Ledger entry","body":"### Install\r\n1. Download [the archive](https://github.com/robotmachine/QuickLedger/archive/v1.0.0.tar.gz)\r\n2. Run `chmod +x ql`\r\n3. Move `ql` to `/usr/local/bin/` or somewhere else in `$PATH`\r\n  \r\n \r\n### Configuration File  \r\n`ql` keeps all data in `$HOME/.qlrc`  \r\n\r\n#### [file]\r\nThe ledger_file section under [file] is created automatically during the first run wizard. \r\n\r\n#### [account]\r\nOptional account section can be used to create a nickname for accounts. When specifying an account either via -a/--account or interactively, `ql` will attempt to match the entry with the nicknames in this section. If no match is found the literal input will be used. The default_account should be set to the nickname of the desired default account. \r\n\r\n#### [merchant] & [category]\r\nThe optional merchant and category section can be used to create nicknames and default categories for merchants. When specifying the merchant with either \r\nThe ~/.qlrc file can be manually edited to include [merchant] nicknames. Additionally, adding a [category] section will use the matching category for that merchant nickname.\r\n  \r\n#### Sample ~/.qlrc\r\n```\r\n$> cat ~/.qlrc  \r\n  \r\n[file]  \r\nledger_file = /home/robotmachine/doc/Ledger.dat  \r\n  \r\n[account]\r\ndefault_account = CHEQ \r\nCHEQ = Assets:MyCreditUnion:Chequing  \r\nSAVE = Assets:MyCreditUnion:Savings  \r\n  \r\n[merchant]  \r\nSD = Sundance Natural Foods  \r\nSQ = SeQuential Biofuels  \r\n\r\n[category]\r\ngroc = Expenses:Groceries\r\nSD = Expenses:Groceries  \r\nSQ = Expenses:Auto:Fuel  \r\n```\r\n  \r\n### Usage\r\n`ql` requires an account, a merchant name, a category, and an amount at minimum. The date will always be set to today if no date option is selected. If any required information is missing from the command line, `ql` will enter interactive mode and prompt the user for the missing data.  \r\n  \r\nOnly one of -e/--expense or -c/--category is needed. The -e/--expense option will prepend Expenses: to the category name to save you typing. In interactive mode Expenses is prepended automatically as well.  \r\n  \r\nSimilarly, only one of -d/--date or -r/--rdate is needed. The -d/--date option takes a YYYY-MM-DD formatted date to use as the transaction date. -r/--rdate will use today's date and then offset the provided whole positive or negative integer. A positive value goes backward and a negative value goes forward. Ie. 1 is yesterday and -1 is tomorrow.  \r\n\r\nThe -s/--split option will take the -t amount as the total (or prompt for one) and prompt through splitting the transaction between multiple categories (see example). `ql` does its best to make sure the transaction will balance and will add the total as a negative balance which will cause an error in `Ledger` if the amounts do not reconcile. Entering a 0 for any of the splits will use the remainder of the balance.  \r\n  \r\nThe -x/--not-cleared option will use a ! instead of * between the date and the merchant as per the `Ledger` documentation to mark the transaction as not cleared. Please see `Ledger` documentation on how this works. Note: You will need to manually edit your ledger.dat file to mark it as cleared. Re-running `ql` without the -x will not mark the transaction as cleared-- it will only add an additional entry for the same amount.  \r\n\r\n### Examples\r\nEveryone loves examples.  \r\n \r\n#### Interactive Mode\r\nRunning `ql` with no options will enter an interactive mode.  \r\n```\r\n$> ql\r\nMerchant name:\r\n        Bob's Groceries\r\nCategory:\r\n        Expenses:Food:Groceries\r\nAmount: $40.21\r\n\r\nWrote entry to /home/robotmachine/doc/Ledger.dat:\r\n2016-02-01 * Bob's Groceries\r\n        Expenses:Food:Groceries                 $40.21\r\n\tAssets:MyCreditUnion:Chequing  \r\n ```\r\n \r\n#### Using Arguments\r\nThe same transaction as above, but using arguments instead of interactive.\r\nBoth lines are equivalent using the long and short version of the arguments.    \r\n```\r\n$> ql --merchant \"Bob's Groceries\" --expense \"Food:Groceries\" --amount 40.21\r\n$> ql -m \"Bob's Groceries\" -e \"Food:Groceries\" -t 40.21\r\n```\r\n```\r\nWrote entry to /home/robotmachine/doc/Ledger.dat:\r\n2016-02-01 * Bob's Groceries\r\n        Expenses:Food:Groceries                 $40.21\r\n\tAssets:MyCreditUnion:Chequing  \r\n```\r\n#### Using Nicknames\r\nThe above sample .qlrc file is used for the next example.  \r\n```\r\n$> ql -m SD -t 27.50\r\n```\r\n```\r\nWrote entry to /home/robotmachine/doc/Ledger.dat:\r\n2016-02-01 * Sundance Natural Foods  \r\n\tExpenses:Groceries\t\t$27.50  \r\n\tAssets:MyCreditUnion:Chequing  \r\n```\r\n\r\n#### Dates\r\nRelative date:  \r\n(Current date in example is 2016-02-01)\r\n```\r\n$> ql -m \"Bob's Groceries\" -e \"Food:Groceries\" -t 40.21 -r 1\r\n```\r\n```\r\nWrote entry to /home/robotmachine/doc/Ledger.dat:\r\n2016-01-31 * Bob's Groceries\r\n        Expenses:Food:Groceries                 $40.21\r\n        Assets:OSCU:Brian\r\n```\r\nManual date:  \r\n```\r\n$> ql -m \"Bob's Groceries\" -e \"Food:Groceries\" -t 40.21 -d 2016-01-15\r\n```\r\n```\r\nWrote entry to /home/robotmachine/doc/Ledger.dat:\r\n2016-01-15 * Bob's Groceries\r\n        Expenses:Food:Groceries                 $40.21\r\n        Assets:OSCU:Brian\r\n```\r\n\r\n#### Split Transaction\r\n```\r\n$> ql -m \"Bob's Groceries\" -t 100 --split\r\n```\r\n```\r\nTotal is $100.00  \r\nEnter '0' for the remainder.  \r\n  \r\nEnter amount for split number 1:        $75  \r\nEnter category for split number 1:      Expenses:Expenses:Groceries  \r\n  \r\n$25.00 remaining.  \r\nEnter amount for split number 2:        $0  \r\nEnter category for split number 2:      Expenses:Healthcare:Supplements  \r\n  \r\nWrote entry to /home/robotmachine/doc/Ledger.dat:  \r\n2016-02-01 * Bob's Groceries\r\n        Expenses:Healthcare:Supplements        $25.00    \r\n        Expenses:Groceries                     $75.00  \r\n        Assets:MyCreditUnion:Chequing          $-100.00  \r\n ```\r\n  \r\n#### Transfer\r\nUse -a/--account for where funds are coming from and -c/--category for where the funds are going to.  \r\nNote: Account nicknames from .qlrc do not work with -c/--category\r\n```\r\n$> ql -m Transfer -a SAVE -c Assets:MyCreditUnion:Chequing -t 100\r\n```\r\n```\r\nWrote entry to /home/robotmachine/doc/Ledger.dat:  \r\n2016-02-01 * Bob's Groceries\r\n\tAssets:MyCreditUnion:Chequing\t\t$100.00\r\n        Assets:MyCreditUnion:Savings\r\n```\r\n  \r\n#### Other Examples\r\nCredit Card Payment  \r\n```\r\n$> ql -m \"My Credit Union\" -a CHEQ -c \"Liabilities:Credit:CU Visa\" -t 100\r\n```\r\n```\r\nWrote entry to /home/robotmachine/doc/Ledger.dat:  \r\n2016-02-01 * My Credit Union\r\n        Liabilities:Credit:CU Visa                      $100.00\r\n        Assets:MyCreditUnion:Chequing\r\n```\r\nIncome: Getting Paid  \r\n```\r\n$> ql -m \"My Employer\" -a Income:Salary:Employer -c Assets:MyCreditUnion:Chequing -t 2140.23\r\n```\r\n```\r\nWrote entry to /home/robotmachine/doc/Ledger.dat:  \r\n2016-02-01 * My Employer\r\n\tAssets:MyCreditUnion:Chequing\t\t\t$2140.23\r\n\tIncome:Salary:Employer\r\n```\r\n\r\n### Built-In Help\r\n```\r\n$> ql -h\r\n```\r\n```\r\nusage: ql [-h] [-f LEDGER_FILE] [-a ACCOUNT] [-m MERCHANT] [-c CATEGORY]\r\n          [-e EXPENSE] [-t AMOUNT] [-r RDATE] [-d DATE] [-s] [-x] [--list]\r\n          [--set-acct] [--set-merch] [--set-cat] [--config ALT_CONFIG] [-v]\r\n\r\nQuickLedger: Entry creation utility for http://ledger-cli.org\r\n\r\noptional arguments:\r\n  -h, --help            show this help message and exit\r\n  -f LEDGER_FILE, --file LEDGER_FILE\r\n                        Specify Ledger data file.\r\n  -a ACCOUNT, --account ACCOUNT\r\n                        Specify account.\r\n  -m MERCHANT, --merchant MERCHANT\r\n                        Set merchant.\r\n  -c CATEGORY, --category CATEGORY\r\n                        Set transaction category.\r\n  -e EXPENSE, --expense EXPENSE\r\n                        Set expense category. (Prepends 'Expenses:')\r\n  -t AMOUNT, --amount AMOUNT\r\n                        Set transaction amount.\r\n  -r RDATE, --rdate RDATE\r\n                        Set number of days ago transaction occurred. Positive\r\n                        value for days in the past, negative value for days in\r\n                        the future. Overrides --date.\r\n  -d DATE, --date DATE  Set date of transaction. Format is YYYY-MM-DD.\r\n  -s, --split           Split payment.\r\n  -x, --not-cleared     Mark transaction as not-cleared/pending.\r\n  --list                List settings in config file.\r\n  --config ALT_CONFIG   Specify alternate config file.\r\n  -v, --version         Print version.\r\n```\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}